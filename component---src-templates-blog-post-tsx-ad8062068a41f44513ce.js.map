{"version":3,"file":"component---src-templates-blog-post-tsx-ad8062068a41f44513ce.js","mappings":"uPASA,MA8DaA,EAAOC,IAA8E,IAAAC,EAAAC,EAAA,IAA3EC,MAAOC,eAAgBC,IAA+CL,EAC3F,OACEM,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,OAAOH,SAAiB,QAAbJ,EAAJI,EAAMI,mBAAW,IAAAR,OAAb,EAAJA,EAAmBO,QAAS,GACnCE,aAAaL,SAAiB,QAAbH,EAAJG,EAAMI,mBAAW,IAAAP,OAAb,EAAJA,EAAmBQ,eAAeL,aAAI,EAAJA,EAAMM,UAAW,IAChE,EAIN,UAvEyBC,IAIqB,IAH5CT,MAAM,SAAEU,EAAQ,KAAEC,EAAI,KAAEC,EAAMX,eAAgBC,GAAM,SACpDW,EAAQ,YACRC,GACuCL,EACvC,MAAMM,GAAYH,aAAI,EAAJA,EAAMI,aAAaX,QAAU,QAC/C,OAAKH,SAAAA,EAAMI,aAITW,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACL,SAAUA,EAAUR,MAAOU,EAAUI,SAAA,EAE3CF,EAAAA,EAAAA,MAAA,WACEG,UAAU,YACVC,WAAS,EACTC,SAAS,4BAA2BH,SAAA,EAEpChB,EAAAA,EAAAA,KAACoB,EAAAA,EAAgB,CAACC,aAAeV,EAAoBU,gBACrDP,EAAAA,EAAAA,MAAA,UAAAE,SAAA,EACEhB,EAAAA,EAAAA,KAAA,MAAIsB,SAAS,WAAUN,SAAEjB,EAAKI,YAAYD,SAC1CF,EAAAA,EAAAA,KAAA,KAAAgB,SAAIjB,EAAKI,YAAYoB,WAGvBvB,EAAAA,EAAAA,KAAA,WACEwB,wBAAyB,CAAEC,OAAQ1B,EAAK2B,MAAQ,IAChDJ,SAAS,iBAEXtB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAAgB,UACEhB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,UAGR3B,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,gBAAeD,UAC5BF,EAAAA,EAAAA,MAAA,MACEc,MAAO,CACLC,QAAU,OACVC,SAAW,OACXC,eAAiB,gBACjBC,UAAY,OACZC,QAAS,GACTjB,SAAA,EAEFhB,EAAAA,EAAAA,KAAA,MAAAgB,UACGT,aAAQ,EAARA,EAAUJ,eACTW,EAAAA,EAAAA,MAACoB,EAAAA,KAAI,CAACC,IAAIC,EAAAA,EAAAA,GAAY7B,GAAW8B,IAAI,OAAMrB,SAAA,CAAC,KACvCT,EAASJ,YAAYD,YAI9BF,EAAAA,EAAAA,KAAA,MAAAgB,UACGR,aAAI,EAAJA,EAAML,eACLW,EAAAA,EAAAA,MAACoB,EAAAA,KAAI,CAACC,IAAIC,EAAAA,EAAAA,GAAY5B,GAAO6B,IAAI,OAAMrB,SAAA,CACpCR,EAAKL,YAAYD,MAAM,kBA7C7B,IAmDE,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport getPostPath from \"../utils/getPostPath\"\nimport { PageProps } from \"gatsby\"\nimport { LanguageSwitcher } from \"../components/LanguageSwitcher\"\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n  pageContext\n}: PageProps<Queries.BlogPostBySlugQuery>) => {\n  const siteTitle = site?.siteMetadata.title || `Title`\n  if (!post?.frontmatter ) {\n    return null\n  }\n  return (\n    <Layout location={location} title={siteTitle}>\n      \n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <LanguageSwitcher translations={(pageContext as any).translations} />\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n          \n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html || \"\" }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous?.frontmatter && (\n              <Link to={getPostPath(previous)} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next?.frontmatter && (\n              <Link to={getPostPath(next)} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: {markdownRemark: post} }: PageProps<Queries.BlogPostBySlugQuery>) => {\n  return (\n    <Seo\n      title={post?.frontmatter?.title || \"\"}\n      description={post?.frontmatter?.description || post?.excerpt || \"\"}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        lang\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        lang\n      }\n    }\n  }\n`\n"],"names":["Head","_ref2","_post$frontmatter","_post$frontmatter2","data","markdownRemark","post","_jsx","Seo","title","frontmatter","description","excerpt","_ref","previous","next","site","location","pageContext","siteTitle","siteMetadata","_jsxs","Layout","children","className","itemScope","itemType","LanguageSwitcher","translations","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","getPostPath","rel"],"sourceRoot":""}